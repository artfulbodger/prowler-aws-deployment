# SPDX-License-Identifier: MIT-0

AWSTemplateFormatVersion: 2010-09-09
Description: Prowler Config - Enables Prowler integration in Security Hub abd creates the Cross Account role required by Prowler to conduct assessments.

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Prowler Execution Settings
        Parameters:
          - ProwlerExecutionAccount
          - ProwlerExecutionRole
      - Label:
          default: CrossAccount Role
        Parameters:
          - ProwlerCrossAccountRole

Parameters:
  ProwlerExecutionAccount:
    Type: String
    Description: Enter AWS Account Number where Prowler is Executed from.  We recommend the Landing Zone Audit account.
    AllowedPattern: ^\d{12}$
    ConstraintDescription: An AWS Account Number must be a 12 digit numeric string.
  ProwlerCrossAccountRole:
    Type: String
    Description: Enter Name for CrossAccount Role to be created for Prowler to assess all Accounts in the AWS Organization.
    AllowedPattern: ^[\w+=,.@-]{1,64}$
    ConstraintDescription: Max 64 alphanumeric characters. Also special characters supported [+, =, ., @, -]
    Default: ProwlerXA-Role
  ProwlerExecutionRole:
    Type: String
    Description: Enter IAM Role that will be used by Prowler to Execute.
    AllowedPattern: ^[\w+=,.@-]{1,64}$
    ConstraintDescription: Max 64 alphanumeric characters. Also special characters supported [+, =, ., @, -]
    Default: ProwlerExecution-Role

Resources:
  SecurityHubWithTags:
    Type: "AWS::SecurityHub::Hub"
    Properties:
      Tags:
        App: Prowler
        Orchestration: !Ref AWS::StackName

  LambdaFunctionEnableProwlerIntegration:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          # SPDX-License-Identifier: MIT-0
          import sys,json,boto3,time,os
          import cfnresponse
          from botocore.exceptions import ClientError

          def lambda_handler(event, context):
            print('this is the event ' + json.dumps(event))
            StackName = event['StackId']
            LogicalResourceId = event['LogicalResourceId']
            UniqueId = event['RequestId']
            props = event['ResourceProperties']
            if (event['RequestType'] == 'Create' or event['RequestType'] == 'Update'):
              try:                
                region = os.environ['AWS_REGION']
                securityhub_client = boto3.client('securityhub', region_name=region)
                response = securityhub_client.enable_import_findings_for_product(ProductArn="arn:aws:securityhub:{}::product/prowler/prowler".format(region))
                print(response)
                cfnresponse.send(event, context, cfnresponse.SUCCESS, {},"LambdaFunctionEnableProwlerIntegrationInvoke")
              except Exception as ex:
                print(ex)
                cfnresponse.send(event, context, cfnresponse.SUCCESS, {})
            else:
              cfnresponse.send(event, context, cfnresponse.SUCCESS, {})
      Handler: index.lambda_handler
      Role: !GetAtt IAMRoleEnableProwlerIntegration.Arn
      Runtime: python3.8
      FunctionName: LambdaFunctionEnableProwlerIntegration
      MemorySize: 256
      Timeout: 300
      Description: Lambda that enables Prowler integration into SecurityHub

  IAMRoleEnableProwlerIntegration:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
        - "arn:aws:iam::aws:policy/AWSSecurityHubReadOnlyAccess"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: IAMRoleEnableProwlerIntegration
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - securityhub:EnableImportFindingsForProduct
                  - securityhub:DisableImportFindingsForProduct
                Resource:
                  - !Sub "arn:aws:securityhub:${AWS::Region}:${AWS::AccountId}:hub/default"

  LambdaFunctionEnableProwlerIntegrationInvoke:
    Type: AWS::CloudFormation::CustomResource
    Version: "1.0"
    Properties:
      ServiceToken: !GetAtt LambdaFunctionEnableProwlerIntegration.Arn

  ProwlerRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Provides Prowler permissions to assess security of Accounts in AWS Organization
      RoleName: !Ref ProwlerCrossAccountRole
      Tags:
        - Key: App
          Value: Prowler
        - Key: Orchestration
          Value: !Ref AWS::StackName
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Sub arn:${AWS::Partition}:iam::${ProwlerExecutionAccount}:root
            Action:
              - sts:AssumeRole
            Condition:
              StringLike:
                aws:PrincipalArn: !Sub arn:${AWS::Partition}:iam::${ProwlerExecutionAccount}:role/${ProwlerExecutionRole}
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/SecurityAudit
        - !Sub arn:${AWS::Partition}:iam::aws:policy/job-function/ViewOnlyAccess
      Policies:
        - PolicyName: Prowler-Additions-Policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: AllowMoreReadForProwler
                Effect: Allow
                Resource: "*"
                Action:
                  - access-analyzer:List*
                  - apigateway:Get*
                  - apigatewayv2:Get*
                  - aws-marketplace:ViewSubscriptions
                  - dax:ListTables
                  - ds:ListAuthorizedApplications
                  - ds:DescribeRoles
                  - ec2:GetEbsEncryptionByDefault
                  - ecr:Describe*
                  - lambda:GetAccountSettings
                  - lambda:GetFunctionConfiguration
                  - lambda:GetLayerVersionPolicy
                  - lambda:GetPolicy
                  - opsworks-cm:Describe*
                  - opsworks:Describe*
                  - secretsmanager:ListSecretVersionIds
                  - sns:List*
                  - sqs:ListQueueTags
                  - states:ListActivities
                  - support:Describe*
                  - tag:GetTagKeys
                  - shield:GetSubscriptionState
                  - shield:DescribeProtection
                  - elasticfilesystem:DescribeBackupPolicy
        - PolicyName: Prowler-SecurityHub-Policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: AllowSecurityHubProwler
                Effect: Allow
                Resource: "*"
                Action:
                  - securityhub:EnableImportFindingsForProduct
                  - securityhub:BatchImportFindings
                  - securityhub:GetFindings
